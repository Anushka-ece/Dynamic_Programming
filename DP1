//HOUSE ROBBER
class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();//size of given array
        
        //in case of no elements
        if(n==0)
            return 0;
        
        vector<int>dp(n);//dp vector for storing values
        
        //in case of single element,that elements would be the answer
        if(n>=1)
            dp[0]=nums[0];
        
        //in case of two elements,maximum of the two elements would be the answer
        if(n>=2)
            dp[1]=max(nums[0],nums[1]);
        
        //in case of more number of elements
        for(int i=2;i<n;i++)
        {
            dp[i]=max(dp[i-1],dp[i-2]+nums[i]);/*since we cannot add the value of adjacent elements together,we have to choose among the maximum of either just one prior element or 2 positions prior element added with the current element*/
        }
        return dp[n-1];//At last return updated value
    }
};
